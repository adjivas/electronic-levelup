---
sudo: required
language: bash
os:
  - linux
env:
  - ARCH=x86_64
addons:
  apt:
    # 1. Setup of the toolchain
    # in the file below: 
    sources:
    - ubuntu-toolchain-r-test
    # Next update apt-get links by typing: 
    update: true
    # Next install the toolchain by typing the following: 
    packages:
    - gcc-arm* 
    - ncurses-dev
    - u-boot-tools -y # uboot-mkimage
    - build-essential
    - git
before_script:
    - arm-linux-gnueabihf-gcc --version 
script:
  # Note that if you use debian may be you will need to add:
  - tar zxv < <(curl -sSL http://http.debian.net/debian/pool/main/e/emdebian-archive-keyring/emdebian-archive-keyring_2.0.3.tar.gz) && cd emdebian-archive-keyring-2.0.3
  - make
  - sudo apt-key add emdebian-archive-keyring.gpg
  - cd -
  - echo "deb http://www.emdebian.org/debian squeeze main" | sudo tee -a /etc/apt/sources.list
  - sudo apt-get update -qq
script:
  - export INPUT=$(git log -1 --oneline --pretty=%s)
  - |
    if [[ $INPUT =~ "--publish" ]];
      then
        export TRAVIS_TAG=1
    fi
  # 2. Building Uboot 
  # First let's make the directory where we would build the AM3352-SOM-olimex: 
  - mkdir -p AM3352-SOM-olimex/{u-boot-2013.10-ti2013.12.01-am3352_som,linux-3.12.10-ti2013.12.01-am3352}
  - mv -vf .travis.yml README.md AM3352-SOM-olimex

  # Then letâ€™s download the uboot sources from GitHub repository. The u-boot is tested with the next branch:
  #- git clone --depth 1 -b next https://github.com/u-boot/u-boot.git && cd u-boot
  #- git rev-parse --verify HEAD 60be958867aacb41b669c456977db88e7d178346
  #- cd -
  # Download u-boot sourses: 
  # After the download you should have a new directory
  - git clone --depth 1 https://github.com/hehopmajieh/u-boot-2013.10-ti2013.12.01-am3352_som && cd u-boot-2013.10-ti2013.12.01-am3352_som
  # With the following commands you have to configure the uboot for the different boards, use only the make command for your board:
  - make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- am335x_evm_config 
  # Now type the following command for u-boot building
  - make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j4
  # At the end of the process you can check if everything is OK by
  - mv -vf MLO u-boot.img ../AM3352-SOM-olimex/u-boot-2013.10-ti2013.12.01-am3352_som
  # If you got these files everything is complete, well done so far 
  - cd -

  # 3. Building kernel sources for AM3352-SOM-olimex boards 
  # Kernel sources for AM3352-SOM-olimex are available on GitHub. Note that the following building is made with the revision below:
  #- git rev-parse --verify HEAD a64ba6c3babeb078f890706407e91b54e99fb5ca 
  # You can download the kernel sources using the following command:
  # After the download go to the kernel directory:
  - git clone --depth 1 https://github.com/hehopmajieh/linux-3.12.10-ti2013.12.01-am3352_som && cd linux-3.12.10-ti2013.12.01-am3352_som
  # 3.1 Make defconfig
  - make ARCH=arm am3352_som_defconfig
  # If you wish to make your changes in the kernel configuration do:
  - echo "\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\n\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\n\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[Bm\x1B\x1B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\nm\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[Bm\x1B\x1B\x1B\x1B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\n\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\n\x1Bm\x1Bm\x1B\x1B\x1B\x1B\x1B\x1B\n" | make ARCH=arm menuconfig
  # 3.2 Make kernel image (zImage) and dts file 
  - make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j4 zImage dtbs
  - mv -vf arch/arm/boot/zImage ../AM3352-SOM-olimex/linux-3.12.10-ti2013.12.01-am3352_som
  - mv -vf arch/arm/boot/dts/am335x-olimex-som.dts ../AM3352-SOM-olimex/linux-3.12.10-ti2013.12.01-am3352_som
  # 3.3 The next step is kernel modules building:
  - export out=../AM3352-SOM-olimex/linux-3.12.10-ti2013.12.01-am3352_som
  - make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j4 INSTALL_MOD_PATH=$out modules
  - make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j4 INSTALL_MOD_PATH=$out modules_install
  - cd -

deploy:
  provider: pages
  local-dir: AM3352-SOM-olimex
  target-branch: little-ti
  skip-cleanup: true
  github-token: "$GITHUB_TOKEN"
  keep-history: true
  verbose: true
  on:
    branch: little-ti
    tags: true

env:
  global:
    secure: "pYbxCCez5zUTUk2eENF0vuDTWWwmlIsXmvbVs4ChWwK1mfz9O+ol0xIceRk80W8JasNeKYGqMvGFjKwj71LF40G1osvohUCTQAZzrjdoUClAspHWLRnROE0vCk3avHHgNf8Hb4KOYJdu4lFqKu50EufG/1xNaMQUDxWWShxH87yl9zDO28XLHntAdNlhXDES0dGY2CVZWyEuVDcoM39z8ZtUS+oy3+VdeRFCgU5KVkCb684MpvmY7zsDjfePegtucMq6QCKMbZvMZLUdkPOSra/JXKwq2rHJkC+Hf2OFn1mwRnKofL44PjPupbQuXq6yauMooR+ugo1OloUdkoBN7Xey+YaFNBY4Olfjsa+OXzdUt/49Ugya9cqRAzbp23VFBe2kju83oqRS4ZHac0aZkbzJw+Iiv4wnMBFuMTvn+A7ugoagPC3nRI8PhaUft1tb+LGwuCD6Arqc12anglUfU6SBd4f1X+PWEZM0KIK9MKDdzrZrh9V6YkZgrvagx8aBeN6cI9kpFxUlqQQdzV3+yOqs9wC3wHNqmNoGlOKbDQVZrhYr8JJ1gX4Mu8+lM1+iXnbU53fziRVMQlakB9oC2ylZEePrAVyGki9sjJVfjQKkT4zepX5eBrq6Y6PZiD9zZ7/4g9Xt4pm6uV8I+qZdRAoXRXG7H6esPkkSBpbTQv8="
