---
sudo: required
language: bash
os:
  - linux
env:
  - ARCH=x86_64
addons:
  apt:
    update: true
    packages:
    ## File system ; https://www.olimex.com/wiki/AM335x#File_system
    # Install required tools: 
    - qemu-user-static
    - debootstrap
    - binfmt-support
script:
  # auto-publish
  - echo $(git log -1 --oneline --pretty=%s) | grep "@travis" && export TRAVIS_TAG=1

  - mkdir -p olimex
  - cp .travis.yml olimex

  - |
    if [ -v BUILD_IMAGE ]
      then
        # http://eewiki.net/display/linuxonarm/BeagleBoard#BeagleBoard-ARMCrossCompiler:GCC
        wget -c https://releases.linaro.org/components/toolchain/binaries/6.4-2017.11/arm-linux-gnueabihf/gcc-linaro-6.4.1-2017.11-x86_64_arm-linux-gnueabihf.tar.xz
        tar xf gcc-linaro-6.4.1-2017.11-x86_64_arm-linux-gnueabihf.tar.xz
        export PATH=$(pwd)/gcc-linaro-6.4.1-2017.11-x86_64_arm-linux-gnueabihf/bin:$PATH
        # Test Cross Compiler:
        arm-linux-gnueabihf-gcc --version

        mkdir -p olimex/images
        ## U-Boot ; https://www.olimex.com/wiki/AM335x#U-Boot
        # Building U-Boot
        # Get sources with:
        git clone git://git.denx.de/u-boot.git && cd u-boot
        # The patch is built against specific commit, so reset repository: 
        git reset --hard b89dfcfd926b8224edd24608065eb9bb601c0d3b
        # Get and apply patch: 
        wget https://raw.githubusercontent.com/OLIMEX/OLINUXINO/master/SOFTWARE/AM335x/patches/0001-Add-support-for-AM335x-Olimex-boards.patch
        git apply 0001-Add-support-for-AM335x-Olimex-boards.patch
        # Build image, where <board_defconfig> is am335x_olimex_som_defconfig or am335x_olimex_som_nandboot_defconfig:
        make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihfdistclean
        make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihfam335x_olimex_som_defconfig
        make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf-
        # This will produce two files: MLO, u-boot.img
        cd -
        cp u-boot/{u-boot.img,u-boot.bin,spl/u-boot-spl.bin} olimex/images
    fi
  - |
    if [ -v BUILD_DTS ]
      then
        mkdir -p olimex/dts
        ## Kernel ; https://www.olimex.com/wiki/AM335x#Kernel
        # Gettint the sources ; https://www.olimex.com/wiki/AM335x#Getting_the_sources
        # Clone into repository: 
        # Get 4.4.y remote branch:
        git clone --depth 1 -b linux-4.4.y git://git.ti.com/ti-linux-kernel/ti-linux-kernel.git && cd ti-linux-kernel
        ## Configure kernel ; https://www.olimex.com/wiki/AM335x#Configure_kernel
        # Load omap2plus default defconfig
        make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihfomap2plus_defconfig
        # Make some modifications:
        echo "\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\n\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\n\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[Bm\x1B\x1B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\nm\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[Bm\x1B\x1B\x1B\x1B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\n\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\x1B[B\n\x1Bm\x1Bm\x1B\x1B\x1B\x1B\x1B\x1B\n" | make ARCH=arm menuconfig
        ## Kernell build ; https://www.olimex.com/wiki/AM335x#Kernel_build
        # Build kernel and modules: 
        make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihfzImage modules
        # Install modules to target directory:
        make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihfINSTALL_MOD_PATH=output modules_install
        # Patch kernel tree to get our device-tree blobs, If patch fail, you can reset the tree
        wget https://raw.githubusercontent.com/OLIMEX/OLINUXINO/master/SOFTWARE/AM335x/patches/0001-Add-support-for-OLIMEX-dtbs.patch || git apply 0001-Add-support-for-OLIMEX-dtbs.patch
        # Build dtbs: 
        make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihfdtbs
        # This will produce lot of .dtb files. The interesting ones are:
        cd -
        cp ti-linux-kernel/arch/arm/boot/dts/*.dtb olimex/dts
    fi

  ## File system ; https://www.olimex.com/wiki/AM335x#File_system
  ## Make new file system ; https://www.olimex.com/wiki/AM335x#Make_new_file_system
  - mkdir rootfs
  - sudo debootstrap --arch=armhf --foreign jessie rootfs 
  # Copy qemu and resolvonf:
  - sudo cp /usr/bin/qemu-arm-static rootfs/usr/bin/
  - sudo cp /etc/resolv.conf rootfs/etc
  # Inside the new file system do: 
  - sudo chroot rootfs bash -c "echo LC_ALL=C\nLANGUAGE=C\nLANG=C > /etc/locale.conf \n /debootstrap/debootstrap --second-stage"
  # Set apt sources.list: 
  - |
    sudo chroot rootfs bash -c "cat << __EOF__ > /etc/apt/sources.list
    #------------------------------------------------------------------------------#
    #                   OFFICIAL DEBIAN REPOS                    
    #------------------------------------------------------------------------------#
    
    ###### Debian Main Repos
    deb http://ftp.bg.debian.org/debian/ jessie main contrib non-free 
    deb-src http://ftp.bg.debian.org/debian/ jessie main contrib non-free 
    
    ###### Debian Update Repos
    deb http://security.debian.org/ jessie/updates main contrib non-free 
    deb http://ftp.bg.debian.org/debian/ jessie-proposed-updates main contrib non-free 
    deb-src http://security.debian.org/ jessie/updates main contrib non-free 
    deb-src http://ftp.bg.debian.org/debian/ jessie-proposed-updates main contrib non-free 
    __EOF__"
  # Set hostname:
  - sudo chroot rootfs bash -c "echo AM335x > /etc/hostname"
  # Install some packages:
  - sudo chroot rootfs bash -c "apt-get install locales dialog sudo openssh-client"
  # Set locales:
  - sudo chroot rootfs bash -c "dpkg-reconfigure locales"


  - sudo tar zcf olimex/rootfs.tar.gz rootfs
  - sudo chown $(users) olimex/rootfs.tar.gz

deploy:
  provider: pages
  local-dir: olimex
  target-branch: ti
  skip-cleanup: true
  github-token: "$GITHUB_TOKEN"
  keep-history: true
  on:
    branch: ti
    tags: true

env:
  global:
    secure: "pYbxCCez5zUTUk2eENF0vuDTWWwmlIsXmvbVs4ChWwK1mfz9O+ol0xIceRk80W8JasNeKYGqMvGFjKwj71LF40G1osvohUCTQAZzrjdoUClAspHWLRnROE0vCk3avHHgNf8Hb4KOYJdu4lFqKu50EufG/1xNaMQUDxWWShxH87yl9zDO28XLHntAdNlhXDES0dGY2CVZWyEuVDcoM39z8ZtUS+oy3+VdeRFCgU5KVkCb684MpvmY7zsDjfePegtucMq6QCKMbZvMZLUdkPOSra/JXKwq2rHJkC+Hf2OFn1mwRnKofL44PjPupbQuXq6yauMooR+ugo1OloUdkoBN7Xey+YaFNBY4Olfjsa+OXzdUt/49Ugya9cqRAzbp23VFBe2kju83oqRS4ZHac0aZkbzJw+Iiv4wnMBFuMTvn+A7ugoagPC3nRI8PhaUft1tb+LGwuCD6Arqc12anglUfU6SBd4f1X+PWEZM0KIK9MKDdzrZrh9V6YkZgrvagx8aBeN6cI9kpFxUlqQQdzV3+yOqs9wC3wHNqmNoGlOKbDQVZrhYr8JJ1gX4Mu8+lM1+iXnbU53fziRVMQlakB9oC2ylZEePrAVyGki9sjJVfjQKkT4zepX5eBrq6Y6PZiD9zZ7/4g9Xt4pm6uV8I+qZdRAoXRXG7H6esPkkSBpbTQv8="
